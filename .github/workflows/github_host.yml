name: github_host

on:
  pull_request:
    branches: [ main ]
    types:
      - opened
      - reopened

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.platform }}
        
    steps:
      - uses: actions/checkout@v3
      
      - name: clang-format
        shell: pwsh
        run: |       
          if ('${{ matrix.platform }}' -eq 'windows-latest')
          {
            Powershell -Command "& 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\Llvm\x64\bin\clang-format.exe' --verbose -n $((Get-ChildItem -Path . -Include @('*.c', '*.cpp', '*.h', '*.hpp') -Exclude @('return_codes.h') -Recurse -ErrorAction SilentlyContinue -Force).FullName)"
          }
          else
          {
            if ('${{ matrix.platform }}' -eq 'ubuntu-latest')
            {
              wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add - 2>&1>/dev/null
              sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main' 2>&1>/dev/null
              sudo apt-get update 2>&1>/dev/null
              sudo apt-get install -y clang-format-14 clang-14 2>&1>/dev/null            
            }
            clang-format-14 --dry-run --verbose --style=file $((Get-ChildItem -Path . -Include @('*.c', '*.cpp', '*.h', '*.hpp') -Exclude @('return_codes.h') -Recurse -ErrorAction SilentlyContinue -Force).FullName)
          }
          
      - name: build
        shell: pwsh
        run: |   
          Remove-Item 'build' -Recurse -ErrorAction SilentlyContinue -Force
          [void](mkdir build)
          cd build 
          if ('${{ matrix.platform }}' -eq 'ubuntu-latest')
          {
            clang++ -std=c++17 -O2 -Werror=vla -I .. $((Get-ChildItem -Path .. -Include @('*.c', '*.cpp') -Recurse -ErrorAction SilentlyContinue -Force).FullName) -o main
          }
          else
          {
            clang++ -std=c++17 -D _CRT_SECURE_NO_WARNINGS -D _USE_MATH_DEFINES  -O2 -Werror=vla -I .. $((Get-ChildItem -Path .. -Include @('*.c', '*.cpp') -Recurse -ErrorAction SilentlyContinue -Force).FullName) -o main.exe
          }
      - name: simple test
        shell: pwsh
        run: |
          cd build
          $inputs = 0, 1, 2
          $count = 0
          foreach ($input in $inputs)
          {
            $test_input = "../.github/workflows/in$input.txt"
            $test_ref = "../.github/workflows/ref$input.txt"
            if ('${{ matrix.platform }}' -eq 'ubuntu-latest')
            {
              ./main $test_input test_output 2>&1 > stdouterr.log
            }
            else
            {
              Powershell -Command "& ./main.exe $test_input test_output 2>&1 > stdouterr.log"
            }    
            if (-not (& Test-Path -Path $test_ref -PathType Leaf))
            {
               echo "Test $input"
               echo "Something wrong with reference file '$test_ref'. Need to contact @viktoriya_yve"
               $count += 1
               continue
            }      
            $ref_content = Get-Content "$test_ref" -Raw
            $out_content = Get-Content test_output -Raw
            if (-not (& Test-Path -Path $test_ref -PathType Leaf))
            {
               echo "Test $input"
               echo "Output file not exist"
               $count += 1
            }
            else
            {
              if ($ref_content -eq $out_content)
              {
                 echo $(Get-Content stdouterr.log -Raw)
                 $count += (Get-ChildItem -Path stdouterr.log).Length
              }
              else
              {
                $out_content = if ($out_content.Length -eq 0) 
                {
                  "<file empty>"
                }
                else
                {
                  $out_content
                }
                echo "Test $input"
                echo "Output content:"
                echo $out_content
                echo "expected content:"
                echo $ref_content
                $count += 1
              }            
            }
          }
          exit $count
